{"version":3,"sources":["Components/Table.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","table","minWidth","tableContainer","borderRadius","margin","maxWidth","tableHeaderCell","fontWeight","backgroundColor","palette","primary","dark","color","getContrastText","Datatable","props","data","classes","btnClick","alert","map","row","title","id","TableContainer","component","Paper","className","Table","TableHead","TableRow","TableCell","TableBody","style","width","completed","onClick","App","rows","useState","setData","q","setQ","useEffect","fetch","then","res","json","type","placeholder","value","onChange","e","target","filter","toLowerCase","indexOf","ReactDOM","render","document","getElementById"],"mappings":"gQAYMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLC,SAAU,KAEZC,eAAgB,CACdC,aAAc,GACdC,OAAQ,YACRC,SAAU,KAEZC,gBAAiB,CACfC,WAAY,OACZC,gBAAiBT,EAAMU,QAAQC,QAAQC,KACvCC,MAAOb,EAAMU,QAAQI,gBAAgBd,EAAMU,QAAQC,QAAQC,WAyDhDG,EAnDE,SAAC,EAAOC,GAAW,IAAjBC,EAAgB,EAAhBA,KACXC,EAAUpB,IAEVqB,EAAS,WACbC,MACE,gCACKH,EAAKI,KAAI,SAACC,GAAD,OACR,6BAEE,6BAAMA,EAAIC,SAFHD,EAAIE,WAavB,OACE,cAACC,EAAA,EAAD,CAAgBC,UAAWC,IAAOC,UAAWV,EAAQf,eAArD,SACE,eAAC0B,EAAA,EAAD,CAAOD,UAAWV,EAAQjB,MAAO,aAAW,eAA5C,UACE,cAAC6B,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWJ,UAAWV,EAAQX,gBAA9B,qBACA,cAACyB,EAAA,EAAD,CAAWJ,UAAWV,EAAQX,gBAA9B,mBACA,cAACyB,EAAA,EAAD,CAAWJ,UAAWV,EAAQX,gBAA9B,oBACA,cAACyB,EAAA,EAAD,CAAWJ,UAAWV,EAAQX,gBAA9B,yBAIJ,cAAC0B,EAAA,EAAD,UACGhB,EAAKI,KAAI,SAACC,GAAD,OACR,eAACS,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWE,MAAO,CAAEC,MAAO,QAA3B,SAAsCb,EAAIE,KAC1C,cAACQ,EAAA,EAAD,CAAWE,MAAO,CAAEC,MAAO,QAA3B,SAAsCb,EAAIC,QAC1C,cAACS,EAAA,EAAD,UAAYV,EAAIc,UAAY,YAAc,gBAE1C,cAACJ,EAAA,EAAD,UACE,wBAAQK,QAASlB,EAAjB,2BANWG,EAAIE,eC5BhBc,G,MA/BH,WAEV,IAagBC,EAbhB,EAAwBC,mBAAS,IAAjC,mBAAOvB,EAAP,KAAawB,EAAb,KACA,EAAkBD,mBAAS,IAA3B,mBAAOE,EAAP,KAAUC,EAAV,KAiBA,OATAC,qBAAU,WALRC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACE,GAAD,OAAUP,EAAQO,QAKzB,IAQD,sBAAKpB,UAAU,MAAf,UACE,sBAAKA,UAAU,QAAf,UACE,uCACA,uBAAOqB,KAAK,OAAOC,YAAY,WAAWC,MAAOT,EAAGU,SAAU,SAACC,GAAD,OAAKV,EAAKU,EAAEC,OAAOH,aAEnF,cAAC,EAAD,CAAWlC,MAXCsB,EAWYtB,EAVnBsB,EAAKgB,QAAO,SAAAjC,GAAG,OAAEA,EAAIC,MAAMiC,cAAcC,QAAQf,IAAM,aCjBlEgB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.73f2a70a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  tableContainer: {\r\n    borderRadius: 15,\r\n    margin: \"10px 10px\",\r\n    maxWidth: 700,\r\n  },\r\n  tableHeaderCell: {\r\n    fontWeight: \"bold\",\r\n    backgroundColor: theme.palette.primary.dark,\r\n    color: theme.palette.getContrastText(theme.palette.primary.dark),\r\n  },\r\n}));\r\n\r\n\r\n\r\nconst Datatable= ({data},props) => {\r\n  const classes = useStyles();\r\n\r\n  const btnClick=()=>{\r\n    alert(\r\n      <table>\r\n          {data.map((row) => (\r\n            <tr key={row.id}>\r\n              {/* <td >{row.id}</td> */}\r\n              <td >{row.title}</td>\r\n              {/* <td >{row.completed ? \"completed\" : \"Incompleted\"}</td> */}\r\n           </tr>  ))}\r\n        </table>\r\n     \r\n    // \"you are clicked\"\r\n    \r\n    )        \r\n  }\r\n  \r\n\r\n  return (\r\n    <TableContainer component={Paper} className={classes.tableContainer}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell className={classes.tableHeaderCell}>ToDo ID</TableCell>\r\n            <TableCell className={classes.tableHeaderCell}>Title</TableCell>\r\n            <TableCell className={classes.tableHeaderCell}>Status</TableCell>\r\n            <TableCell className={classes.tableHeaderCell}>Action</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n\r\n        <TableBody>\r\n          {data.map((row) => (\r\n            <TableRow key={row.id}>\r\n              <TableCell style={{ width: \"5rem\" }}>{row.id}</TableCell>\r\n              <TableCell style={{ width: \"9rem\" }}>{row.title}</TableCell>\r\n              <TableCell>{row.completed ? \"completed\" : \"Incompleted\"}</TableCell>\r\n              \r\n              <TableCell>\r\n                <button onClick={btnClick}>View User</button>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\n\r\nexport default Datatable;","import React, { useState, useEffect } from \"react\";\nimport DataTable from \"./Components/Table\";\nimport \"./App.css\"\n\n\nconst App = () => {\n  // const classes = useStyles();\n  const [data, setData] = useState([]);\n  const [q, setQ] = useState(\"\");\n\n  const fetchInventory = () => {\n    fetch(`https://jsonplaceholder.typicode.com/todos`)\n      .then((res) => res.json())\n      .then((json) => setData(json));\n  };\n\n  useEffect(() => {\n    fetchInventory();\n  }, []);\n\n  function search(rows){\n    return rows.filter(row=>row.title.toLowerCase().indexOf(q) > -1)\n  }\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"title\">\n        <h1>Todos</h1>\n        <input type='text' placeholder=\"Search..\" value={q} onChange={(e)=>setQ(e.target.value)}/>\n      </div>\n      <DataTable data={search(data)}  />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}